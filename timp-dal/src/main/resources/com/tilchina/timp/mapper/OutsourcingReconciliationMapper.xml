<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.tilchina.timp.mapper.OutsourcingReconciliationMapper" >	<resultMap id="BaseResultMap" type="com.tilchina.timp.model.OutsourcingReconciliation" >		<id column="RECONCILIATION_ID" jdbcType="BIGINT" property="reconciliationId" />		<result column="RECONCILIATION_ID" jdbcType="BIGINT" property="reconciliationId" />		<result column="RECONCILIATION_NUMBER" jdbcType="VARCHAR" property="reconciliationNumber" />		<result column="VENDOR_CORP_ID" jdbcType="BIGINT" property="vendorCorpId" />		<result column="CAR_VIN_COUNT" jdbcType="INTEGER" property="carVinCount" />		<result column="OUTSOURCING_AMOUNT" jdbcType="DECIMAL" property="outsourcingAmount" />		<result column="ACTUAL_AMOUNT" jdbcType="DECIMAL" property="actualAmount" />		<result column="RED_AMOUNT" jdbcType="DECIMAL" property="redAmount" />		<result column="BLUE_AMOUNT" jdbcType="DECIMAL" property="blueAmount" />		<result column="DEDUCTION_AMOUNT" jdbcType="DECIMAL" property="deductionAmount" />		<result column="DEDUCTION_REASON" jdbcType="VARCHAR" property="deductionReason" />		<result column="BILL_STATUS" jdbcType="INTEGER" property="billStatus" />		<result column="CREATOR" jdbcType="BIGINT" property="creator" />		<result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />		<result column="CHECKER" jdbcType="BIGINT" property="checker" />		<result column="CHECK_DATE" jdbcType="TIMESTAMP" property="checkDate" />		<result column="CONFIRMOR" jdbcType="BIGINT" property="confirmor" />		<result column="CONFIRM_DATE" jdbcType="TIMESTAMP" property="confirmDate" />		<result column="SETTLEMENT_DATE" jdbcType="TIMESTAMP" property="settlementDate" />		<result column="CORP_ID" jdbcType="BIGINT" property="corpId" />		<result column="FLAG" jdbcType="INTEGER" property="flag" />	</resultMap>	<sql id="Base_Column_List" >    RECONCILIATION_ID, RECONCILIATION_NUMBER, VENDOR_CORP_ID, CAR_VIN_COUNT, OUTSOURCING_AMOUNT, ACTUAL_AMOUNT, RED_AMOUNT,	BLUE_AMOUNT, DEDUCTION_AMOUNT, DEDUCTION_REASON, BILL_STATUS, CREATOR, CREATE_DATE, CHECKER, CHECK_DATE, CONFIRMOR,	CONFIRM_DATE, SETTLEMENT_DATE, CORP_ID, FLAG  	</sql>	<sql id="Query_Column_List">		self.RECONCILIATION_ID,		self.RECONCILIATION_NUMBER,		self.VENDOR_CORP_ID,		self.CAR_VIN_COUNT,		self.OUTSOURCING_AMOUNT,		self.ACTUAL_AMOUNT,		self.RED_AMOUNT,		self.BLUE_AMOUNT,		self.DEDUCTION_AMOUNT,		self.DEDUCTION_REASON,		self.BILL_STATUS,		self.CREATOR,		self.CREATE_DATE,		self.CHECKER,		self.CHECK_DATE,		self.CONFIRMOR,		self.CONFIRM_DATE,		self.SETTLEMENT_DATE,		self.CORP_ID,		self.FLAG,		userA.USER_NAME as refCreatorName,		userB.USER_NAME as refCheckerName,		userC.USER_NAME as refConfirmorName,		corpA.CORP_NAME as refVendorCorpName,		corpB.CORP_NAME as refCorpName	</sql>	<sql id="Example_Where_Clause">		where self.DEL = 0		<trim  suffixOverrides="," >			<if test="reconciliationId != null and reconciliationId != ''" >				and self.RECONCILIATION_ID = #{reconciliationId}			</if>			<if test="reconciliationNumber != null and reconciliationNumber != ''" >				and (self.RECONCILIATION_NUMBER = #{reconciliationNumber} or self.RECONCILIATION_NUMBER like concat('%', #{reconciliationNumber}, '%'))			</if>			<if test="vendorCorpId != null and vendorCorpId != ''" >				and self.VENDOR_CORP_ID = #{vendorCorpId}			</if>			<if test="carVinCount != null and carVinCount != ''" >				and self.CAR_VIN_COUNT = #{carVinCount}			</if>			<if test="outsourcingAmount != null and outsourcingAmount != ''" >				and self.OUTSOURCING_AMOUNT = #{outsourcingAmount}			</if>			<if test="actualAmount != null and actualAmount != ''" >				and self.ACTUAL_AMOUNT = #{actualAmount}			</if>			<if test="redAmount != null and redAmount != ''" >				and self.RED_AMOUNT = #{redAmount}			</if>			<if test="blueAmount != null and blueAmount != ''" >				and self.BLUE_AMOUNT = #{blueAmount}			</if>			<if test="deductionAmount != null and deductionAmount != ''" >				and self.DEDUCTION_AMOUNT = #{deductionAmount}			</if>			<if test="deductionReason != null and deductionReason != ''" >				and self.DEDUCTION_REASON = #{deductionReason}			</if>			<if test="billStatus != null and billStatus != ''" >				and self.BILL_STATUS = #{billStatus}			</if>			<if test="creator != null and creator != ''" >				and self.CREATOR = #{creator}			</if>			<if test="createDate != null and createDate != ''" >				and self.CREATE_DATE = #{createDate}			</if>			<if test="checker != null and checker != ''" >				and self.CHECKER = #{checker}			</if>			<if test="checkDate != null and checkDate != ''" >				and self.CHECK_DATE = #{checkDate}			</if>			<if test="confirmor != null and confirmor != ''" >				and self.CONFIRMOR = #{confirmor}			</if>			<if test="confirmDate != null and confirmDate != ''" >				and self.CONFIRM_DATE = #{confirmDate}			</if>			<if test="settlementDate != null and settlementDate != ''" >				and self.SETTLEMENT_DATE = #{settlementDate}			</if>			<if test="corpId != null and corpId != ''" >				and self.CORP_ID = #{corpId}			</if>			<if test="flag != null and flag != ''" >				and self.FLAG = #{flag}			</if>			<if test="refVendorCorpName != null and refVendorCorpName != ''">				and (corpA.CORP_NAME = #{refVendorCorpName} or corpA.CORP_NAME like concat('%', #{refVendorCorpName}, '%'))			</if>			<if test="searchContent !=null and searchContent != ''">				and				(				self.RECONCILIATION_NUMBER like concat('%', #{searchContent}, '%') or				corpA.CORP_NAME like concat('%', #{searchContent}, '%')				)			</if>		</trim>	</sql>	<select id="selectByPrimaryKey"  resultMap="BaseResultMap" parameterType="java.lang.Long">		select		<include refid="Base_Column_List"/>		from fs_outsourcing_reconciliation		where RECONCILIATION_ID = #{reconciliationId,jdbcType=BIGINT}	</select>	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">    delete  from fs_outsourcing_reconciliation where RECONCILIATION_ID = #{reconciliationId}  </delete>	<insert id="insert" parameterType="com.tilchina.timp.model.OutsourcingReconciliation" keyProperty="reconciliationId" useGeneratedKeys="true">    insert into fs_outsourcing_reconciliation	(RECONCILIATION_NUMBER, VENDOR_CORP_ID, CAR_VIN_COUNT, OUTSOURCING_AMOUNT, ACTUAL_AMOUNT, RED_AMOUNT, BLUE_AMOUNT, DEDUCTION_AMOUNT,	DEDUCTION_REASON, BILL_STATUS, CREATOR, CREATE_DATE, CHECKER, CHECK_DATE, CONFIRMOR, CONFIRM_DATE,	SETTLEMENT_DATE, CORP_ID, FLAG)	values	(#{reconciliationNumber,jdbcType=VARCHAR}, #{vendorCorpId,jdbcType=BIGINT}, #{carVinCount,jdbcType=INTEGER}, #{outsourcingAmount,jdbcType=DECIMAL},	#{actualAmount,jdbcType=DECIMAL}, #{redAmount,jdbcType=DECIMAL}, #{blueAmount,jdbcType=DECIMAL},	#{deductionAmount,jdbcType=DECIMAL}, #{deductionReason,jdbcType=VARCHAR}, #{billStatus,jdbcType=INTEGER},	#{creator,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{checker,jdbcType=BIGINT}, #{checkDate,jdbcType=TIMESTAMP},	#{confirmor,jdbcType=BIGINT}, #{confirmDate,jdbcType=TIMESTAMP}, #{settlementDate,jdbcType=TIMESTAMP},	#{corpId,jdbcType=BIGINT}, #{flag,jdbcType=INTEGER})  </insert>	<insert id="insertSelective" parameterType="com.tilchina.timp.model.OutsourcingReconciliation" keyProperty="reconciliationId" useGeneratedKeys="true">		insert into fs_outsourcing_reconciliation		<trim prefix="(" suffix=")" suffixOverrides=",">			<if test="reconciliationNumber != null">				RECONCILIATION_NUMBER,			</if>			<if test="vendorCorpId != null">				VENDOR_CORP_ID,			</if>			<if test="carVinCount != null">				CAR_VIN_COUNT,			</if>			<if test="outsourcingAmount != null">				OUTSOURCING_AMOUNT,			</if>			<if test="actualAmount != null">				ACTUAL_AMOUNT,			</if>			<if test="redAmount != null">				RED_AMOUNT,			</if>			<if test="blueAmount != null">				BLUE_AMOUNT,			</if>			<if test="deductionAmount != null">				DEDUCTION_AMOUNT,			</if>			<if test="deductionReason != null">				DEDUCTION_REASON,			</if>			<if test="billStatus != null">				BILL_STATUS,			</if>			<if test="creator != null">				CREATOR,			</if>			<if test="createDate != null">				CREATE_DATE,			</if>			<if test="checker != null">				CHECKER,			</if>			<if test="checkDate != null">				CHECK_DATE,			</if>			<if test="confirmor != null">				CONFIRMOR,			</if>			<if test="confirmDate != null">				CONFIRM_DATE,			</if>			<if test="settlementDate != null">				SETTLEMENT_DATE,			</if>			<if test="corpId != null">				CORP_ID,			</if>			<if test="flag != null">				FLAG,			</if>		</trim>		<trim prefix="values (" suffix=")" suffixOverrides=",">			<if test="reconciliationNumber != null">				#{reconciliationNumber,jdbcType=VARCHAR},			</if>			<if test="vendorCorpId != null">				#{vendorCorpId,jdbcType=BIGINT},			</if>			<if test="carVinCount != null">				#{carVinCount,jdbcType=INTEGER},			</if>			<if test="outsourcingAmount != null">				#{outsourcingAmount,jdbcType=DECIMAL},			</if>			<if test="actualAmount != null">				#{actualAmount,jdbcType=DECIMAL},			</if>			<if test="redAmount != null">				#{redAmount,jdbcType=DECIMAL},			</if>			<if test="blueAmount != null">				#{blueAmount,jdbcType=DECIMAL},			</if>			<if test="deductionAmount != null">				#{deductionAmount,jdbcType=DECIMAL},			</if>			<if test="deductionReason != null">				#{deductionReason,jdbcType=VARCHAR},			</if>			<if test="billStatus != null">				#{billStatus,jdbcType=INTEGER},			</if>			<if test="creator != null">				#{creator,jdbcType=BIGINT},			</if>			<if test="createDate != null">				#{createDate,jdbcType=TIMESTAMP},			</if>			<if test="checker != null">				#{checker,jdbcType=BIGINT},			</if>			<if test="checkDate != null">				#{checkDate,jdbcType=TIMESTAMP},			</if>			<if test="confirmor != null">				#{confirmor,jdbcType=BIGINT},			</if>			<if test="confirmDate != null">				#{confirmDate,jdbcType=TIMESTAMP},			</if>			<if test="settlementDate != null">				#{settlementDate,jdbcType=TIMESTAMP},			</if>			<if test="corpId != null">				#{corpId,jdbcType=BIGINT},			</if>			<if test="flag != null">				#{flag,jdbcType=INTEGER},			</if>		</trim>	</insert>	<update id="updateByPrimaryKeySelective" parameterType="com.tilchina.timp.model.OutsourcingReconciliation" >		update fs_outsourcing_reconciliation		<set>			<if test="reconciliationNumber != null">				RECONCILIATION_NUMBER = #{reconciliationNumber,jdbcType=VARCHAR},			</if>			<if test="vendorCorpId != null">				VENDOR_CORP_ID = #{vendorCorpId,jdbcType=BIGINT},			</if>			<if test="carVinCount != null">				CAR_VIN_COUNT = #{carVinCount,jdbcType=INTEGER},			</if>			<if test="outsourcingAmount != null">				OUTSOURCING_AMOUNT = #{outsourcingAmount,jdbcType=DECIMAL},			</if>			<if test="actualAmount != null">				ACTUAL_AMOUNT = #{actualAmount,jdbcType=DECIMAL},			</if>			<if test="redAmount != null">				RED_AMOUNT = #{redAmount,jdbcType=DECIMAL},			</if>			<if test="blueAmount != null">				BLUE_AMOUNT = #{blueAmount,jdbcType=DECIMAL},			</if>			<if test="deductionAmount != null">				DEDUCTION_AMOUNT = #{deductionAmount,jdbcType=DECIMAL},			</if>			<if test="deductionReason != null">				DEDUCTION_REASON = #{deductionReason,jdbcType=VARCHAR},			</if>			<if test="billStatus != null">				BILL_STATUS = #{billStatus,jdbcType=INTEGER},			</if>			<if test="creator != null">				CREATOR = #{creator,jdbcType=BIGINT},			</if>			<if test="createDate != null">				CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},			</if>			<if test="checker != null">				CHECKER = #{checker,jdbcType=BIGINT},			</if>			<if test="checkDate != null">				CHECK_DATE = #{checkDate,jdbcType=TIMESTAMP},			</if>			<if test="confirmor != null">				CONFIRMOR = #{confirmor,jdbcType=BIGINT},			</if>			<if test="confirmDate != null">				CONFIRM_DATE = #{confirmDate,jdbcType=TIMESTAMP},			</if>			<if test="settlementDate != null">				SETTLEMENT_DATE = #{settlementDate,jdbcType=TIMESTAMP},			</if>			<if test="corpId != null">				CORP_ID = #{corpId,jdbcType=BIGINT},			</if>			<if test="flag != null">				FLAG = #{flag,jdbcType=INTEGER},			</if>		</set>		where RECONCILIATION_ID = #{reconciliationId,jdbcType=BIGINT}	</update>	<update id="updateByPrimaryKey" parameterType="com.tilchina.timp.model.OutsourcingReconciliation" >    update fs_outsourcing_reconciliation set	  RECONCILIATION_NUMBER = #{reconciliationNumber,jdbcType=VARCHAR}, VENDOR_CORP_ID = #{vendorCorpId,jdbcType=BIGINT}, CAR_VIN_COUNT = #{carVinCount,jdbcType=INTEGER},	  OUTSOURCING_AMOUNT = #{outsourcingAmount,jdbcType=DECIMAL}, ACTUAL_AMOUNT = #{actualAmount,jdbcType=DECIMAL},	  RED_AMOUNT = #{redAmount,jdbcType=DECIMAL}, BLUE_AMOUNT = #{blueAmount,jdbcType=DECIMAL},	  DEDUCTION_AMOUNT = #{deductionAmount,jdbcType=DECIMAL}, DEDUCTION_REASON = #{deductionReason,jdbcType=VARCHAR},	  BILL_STATUS = #{billStatus,jdbcType=INTEGER}, CREATOR = #{creator,jdbcType=BIGINT}, CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},	  CHECKER = #{checker,jdbcType=BIGINT}, CHECK_DATE = #{checkDate,jdbcType=TIMESTAMP}, CONFIRMOR = #{confirmor,jdbcType=BIGINT},	  CONFIRM_DATE = #{confirmDate,jdbcType=TIMESTAMP}, SETTLEMENT_DATE = #{settlementDate,jdbcType=TIMESTAMP},	  CORP_ID = #{corpId,jdbcType=BIGINT}, FLAG = #{flag,jdbcType=INTEGER}	where RECONCILIATION_ID = #{reconciliationId,jdbcType=BIGINT}  </update>	<select id="selectList" resultMap="BaseResultMap"  parameterType="Object">		select		<include refid="Query_Column_List"/>		from fs_outsourcing_reconciliation self		left join bd_user userA  on self.CREATOR        = userA.USER_ID		left join bd_user userB  on self.CHECKER        = userB.USER_ID		left join bd_user userC  on self.CONFIRMOR      = userC.USER_ID		left join sys_corp corpA on self.VENDOR_CORP_ID = corpA.CORP_ID		left join sys_corp corpB on self.CORP_ID        = corpB.CORP_ID		<include refid="Example_Where_Clause"/>		order by self.CREATE_DATE DESC	</select>	<select id="queryByReconciliationNumber" parameterType="String" resultMap="BaseResultMap">		SELECT		<include refid="Base_Column_List"/>		FROM fs_outsourcing_reconciliation		WHERE RECONCILIATION_NUMBER = #{reconciliationNumber}		AND FLAG = 0		AND DEL = 0	</select>	<update id="logicalDelete" parameterType="Long">		UPDATE fs_outsourcing_reconciliation		SET DEL = 1		WHERE RECONCILIATION_ID = #{reconciliationId}	</update>	<update id="updateDocumentsCheckState" parameterType="com.tilchina.timp.model.OutsourcingReconciliation">		update fs_outsourcing_reconciliation		set CHECKER     = #{checker},			CHECK_DATE  = #{checkDate},			BILL_STATUS = #{billStatus}		where RECONCILIATION_ID = #{reconciliationId}	</update></mapper>   