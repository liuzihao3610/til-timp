<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.tilchina.timp.mapper.LoginMapper" >  <resultMap id="BaseResultMap" type="com.tilchina.timp.model.Login" >    <id column="LOGIN_ID" jdbcType="BIGINT" property="loginId" />	<result column="LOGIN_ID" jdbcType="BIGINT" property="loginId" />	<result column="USER_ID" jdbcType="BIGINT" property="userId" />	<result column="PASSWORD" jdbcType="VARCHAR" property="password" />	<result column="TOKEN" jdbcType="VARCHAR" property="token" />	<result column="SPECIAL" jdbcType="VARCHAR" property="special" />	<result column="CAPTCHA" jdbcType="VARCHAR" property="captcha" />	<result column="IDENTIFIER" jdbcType="VARCHAR" property="identifier" />	<result column="USER_AGENT" jdbcType="VARCHAR" property="userAgent" />	<result column="CLIENT_TYPE" jdbcType="INTEGER" property="clientType" />	<result column="ERROR_TIMES" jdbcType="INTEGER" property="errorTimes" />	<result column="BLOCK" jdbcType="INTEGER" property="block" />	<result column="IP" jdbcType="VARCHAR" property="ip" />	<result column="RECENTLY_LOGINTIME" jdbcType="TIMESTAMP" property="recentlyLogintime" />	<result column="CORP_ID" jdbcType="BIGINT" property="corpId" />	<result column="FLAG" jdbcType="INTEGER" property="flag" />  </resultMap>  <sql id="Base_Column_List" >    LOGIN_ID, USER_ID, PASSWORD, TOKEN, SPECIAL, CAPTCHA, IDENTIFIER, USER_AGENT, CLIENT_TYPE, ERROR_TIMES, BLOCK, IP, RECENTLY_LOGINTIME,	CORP_ID, FLAG  </sql>  <sql id="Query_Column_List" >	login.LOGIN_ID ,login.USER_ID ,user.USER_NAME,login.PASSWORD ,login.TOKEN,login.LDENTIFIER,login.CLIENT_TYPE ,login.ERROR_TIMES ,login.BLOCK ,	login.IP ,login.RECENTLY_LOGINTIME,login.CREATOR ,login.CREATE_DATE,login.CORP_ID,login.FLAG  </sql>  <sql id="Example_Where_Clause">    where del = 0    <trim  suffixOverrides="," >      <if test="loginId != null and loginId != ''" >        and LOGIN_ID = #{loginId}      </if>      <if test="userId != null and userId != ''" >        and USER_ID = #{userId}      </if>      <if test="password != null and password != ''" >        and PASSWORD = #{password}      </if>      <if test="token != null and token != ''" >        and TOKEN = #{token}      </if>      <if test="special != null and special != ''" >        and SPECIAL = #{special}      </if>      <if test="captcha != null and captcha != ''" >        and CAPTCHA = #{captcha}      </if>      <if test="identifier != null and identifier != ''" >        and IDENTIFIER = #{identifier}      </if>      <if test="userAgent != null and userAgent != ''" >        and USER_AGENT = #{userAgent}      </if>      <if test="clientType != null and clientType != ''" >        and CLIENT_TYPE = #{clientType}      </if>      <if test="errorTimes != null and errorTimes != ''" >        and ERROR_TIMES = #{errorTimes}      </if>      <if test="block != null and block != ''" >        and BLOCK = #{block}      </if>      <if test="ip != null and ip != ''" >        and IP = #{ip}      </if>      <if test="recentlyLogintime != null and recentlyLogintime != ''" >        and RECENTLY_LOGINTIME = #{recentlyLogintime}      </if>      <if test="corpId != null and corpId != ''" >        and CORP_ID = #{corpId}      </if>      <if test="flag != null and flag != ''" >        and FLAG = #{flag}      </if>    </trim>  </sql>     <select id="selectByPrimaryKey"  resultMap="BaseResultMap" parameterType="java.lang.Long">    select      <include refid="Base_Column_List"/>    from bd_login    where LOGIN_ID = #{loginId,jdbcType=BIGINT}  </select>  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">    delete  from bd_login where LOGIN_ID = #{loginId}  </delete>  <insert id="insert" parameterType="com.tilchina.timp.model.Login" keyProperty="loginId" useGeneratedKeys="true">    insert into bd_login	(USER_ID, PASSWORD, TOKEN, SPECIAL, CAPTCHA, IDENTIFIER, USER_AGENT, CLIENT_TYPE, ERROR_TIMES, BLOCK, IP, RECENTLY_LOGINTIME,	CORP_ID, FLAG)	values	(#{userId,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{special,jdbcType=VARCHAR}, #{captcha,jdbcType=VARCHAR},	#{identifier,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR}, #{clientType,jdbcType=INTEGER},	#{errorTimes,jdbcType=INTEGER}, #{block,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{recentlyLogintime,jdbcType=TIMESTAMP},	#{corpId,jdbcType=BIGINT}, #{flag,jdbcType=INTEGER})  </insert>  <insert id="insertSelective" parameterType="com.tilchina.timp.model.Login" keyProperty="loginId" useGeneratedKeys="true">    insert into bd_login	<trim prefix="(" suffix=")" suffixOverrides=",">	  <if test="userId != null">	    USER_ID, 	  </if>	  <if test="password != null">	    PASSWORD, 	  </if>	  <if test="token != null">	    TOKEN, 	  </if>	  <if test="special != null">	    SPECIAL,	  </if>	  <if test="captcha != null">	    CAPTCHA, 	  </if>	  <if test="identifier != null">	    IDENTIFIER,	  </if>	  <if test="userAgent != null">	    USER_AGENT, 	  </if>	  <if test="clientType != null">	    CLIENT_TYPE, 	  </if>	  <if test="errorTimes != null">	    ERROR_TIMES, 	  </if>	  <if test="block != null">	    BLOCK, 	  </if>	  <if test="ip != null">	    IP, 	  </if>	  <if test="recentlyLogintime != null">	    RECENTLY_LOGINTIME, 	  </if>	  <if test="corpId != null">	    CORP_ID, 	  </if>	  <if test="flag != null">	    FLAG, 	  </if>	</trim>	<trim prefix="values (" suffix=")" suffixOverrides=",">	  <if test="userId != null">	    #{userId,jdbcType=BIGINT}, 	  </if>	  <if test="password != null">	    #{password,jdbcType=VARCHAR}, 	  </if>	  <if test="token != null">	    #{token,jdbcType=VARCHAR}, 	  </if>	  <if test="special != null">	    #{special,jdbcType=VARCHAR},	  </if>	  <if test="captcha != null">	    #{captcha,jdbcType=VARCHAR}, 	  </if>	  <if test="identifier != null">	    #{identifier,jdbcType=VARCHAR},	  </if>	  <if test="userAgent != null">	    #{userAgent,jdbcType=VARCHAR}, 	  </if>	  <if test="clientType != null">	    #{clientType,jdbcType=INTEGER}, 	  </if>	  <if test="errorTimes != null">	    #{errorTimes,jdbcType=INTEGER}, 	  </if>	  <if test="block != null">	    #{block,jdbcType=INTEGER}, 	  </if>	  <if test="ip != null">	    #{ip,jdbcType=VARCHAR}, 	  </if>	  <if test="recentlyLogintime != null">	    #{recentlyLogintime,jdbcType=TIMESTAMP}, 	  </if>	  <if test="corpId != null">	    #{corpId,jdbcType=BIGINT}, 	  </if>	  <if test="flag != null">	    #{flag,jdbcType=INTEGER}, 	  </if>	</trim>  </insert>  <update id="updateByPrimaryKeySelective" parameterType="com.tilchina.timp.model.Login" >	update bd_login	<set>	  <if test="userId != null">	    USER_ID = #{userId,jdbcType=BIGINT}, 	  </if>	  <if test="password != null">	    PASSWORD = #{password,jdbcType=VARCHAR}, 	  </if>	  <if test="token != null">	    TOKEN = #{token,jdbcType=VARCHAR}, 	  </if>	  <if test="special != null">	    SPECIAL = #{special,jdbcType=VARCHAR},	  </if>	  <if test="captcha != null">	    CAPTCHA = #{captcha,jdbcType=VARCHAR}, 	  </if>	  <if test="identifier != null">	    IDENTIFIER = #{identifier,jdbcType=VARCHAR},	  </if>	  <if test="userAgent != null">	    USER_AGENT = #{userAgent,jdbcType=VARCHAR}, 	  </if>	  <if test="clientType != null">	    CLIENT_TYPE = #{clientType,jdbcType=INTEGER}, 	  </if>	  <if test="errorTimes != null">	    ERROR_TIMES = #{errorTimes,jdbcType=INTEGER}, 	  </if>	  <if test="block != null">	    BLOCK = #{block,jdbcType=INTEGER}, 	  </if>	  <if test="ip != null">	    IP = #{ip,jdbcType=VARCHAR}, 	  </if>	  <if test="recentlyLogintime != null">	    RECENTLY_LOGINTIME = #{recentlyLogintime,jdbcType=TIMESTAMP}, 	  </if>	  <if test="corpId != null">	    CORP_ID = #{corpId,jdbcType=BIGINT}, 	  </if>	  <if test="flag != null">	    FLAG = #{flag,jdbcType=INTEGER}, 	  </if>	</set>	where LOGIN_ID = #{loginId,jdbcType=BIGINT}  </update>  <update id="updateByPrimaryKey" parameterType="com.tilchina.timp.model.Login" >    update bd_login set 	  USER_ID = #{userId,jdbcType=BIGINT}, PASSWORD = #{password,jdbcType=VARCHAR}, TOKEN = #{token,jdbcType=VARCHAR}, SPECIAL = #{special,jdbcType=VARCHAR},	  CAPTCHA = #{captcha,jdbcType=VARCHAR}, IDENTIFIER = #{identifier,jdbcType=VARCHAR},	  USER_AGENT = #{userAgent,jdbcType=VARCHAR}, CLIENT_TYPE = #{clientType,jdbcType=INTEGER}, ERROR_TIMES = #{errorTimes,jdbcType=INTEGER},	  BLOCK = #{block,jdbcType=INTEGER}, IP = #{ip,jdbcType=VARCHAR}, RECENTLY_LOGINTIME = #{recentlyLogintime,jdbcType=TIMESTAMP},	  CORP_ID = #{corpId,jdbcType=BIGINT}, FLAG = #{flag,jdbcType=INTEGER}	where LOGIN_ID = #{loginId,jdbcType=BIGINT}  </update>  <update id="updateByPrimaryKeyLogin" parameterType="com.tilchina.timp.model.Login" >    update bd_login set  	  <if test="password != null">	  	PASSWORD = #{password,jdbcType=VARCHAR}	  </if>	  <if test="block != null">	  	BLOCK = #{block,jdbcType=INTEGER}	  </if>	where USER_ID = #{userId,jdbcType=BIGINT}  </update>  <update id="logicDeleteByPrimaryKey" parameterType="java.lang.Long">    update bd_login set      DEL = 1    WHERE USER_ID = #{userId,jdbcType=BIGINT}  </update>  <update id="logicDeleteByPrimaryKeyList" parameterType="java.lang.Long">    update bd_login set	  DEL = 1	WHERE USER_ID  in	<foreach collection="array" item="item" open="(" separator="," close=")">		<if test="item != null and item != ''" >	       #{item,jdbcType=BIGINT}	    </if>	</foreach>  </update>  <select id="selectList" resultMap="BaseResultMap"  parameterType="Object">	select	<include refid="Base_Column_List"/>	from bd_login	<include refid="Example_Where_Clause"/>	<if test="orderByClause != null and orderByClause != ''" >       order by ${orderByClause}    </if>  </select>	<select id="selectByUserCode" resultMap="BaseResultMap"  parameterType="Object">		select		a.LOGIN_ID, a.USER_ID, a.PASSWORD, a.TOKEN, a.CAPTCHA, a.IDENTIFIER, a.USER_AGENT, a.CLIENT_TYPE,		a.ERROR_TIMES, a.BLOCK, a.IP, a.RECENTLY_LOGINTIME		from bd_login a		join bd_user b on a.user_id = b.user_id		where b.FLAG = 0 and b.BILL_STATUS=1		and b.USER_CODE = #{userCode,jdbcType=VARCHAR}		and b.user_type = #{userType,jdbcType=INTEGER}		and b.BILL_STATUS=1	</select>    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="Long">        select        <include refid="Base_Column_List"/>        from BD_LOGIN        where user_id = #{userId}    </select></mapper>