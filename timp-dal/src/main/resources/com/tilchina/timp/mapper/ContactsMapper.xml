<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.tilchina.timp.mapper.ContactsMapper" >  <resultMap id="BaseResultMap" type="com.tilchina.timp.model.Contacts" >    <id column="CONTACTS_ID" jdbcType="BIGINT" property="contactsId" />	<result column="CONTACTS_ID" jdbcType="BIGINT" property="contactsId" />	<result column="UNIT_ID" jdbcType="BIGINT" property="unitId" />	<result column="CONTACTS_NAME" jdbcType="VARCHAR" property="contactsName" />	  <result column="CONTACTS_CODE" jdbcType="VARCHAR" property="contactsCode" />	<result column="PHONE" jdbcType="VARCHAR" property="phone" />	<result column="FIX" jdbcType="VARCHAR" property="fix" />	<result column="EMAIL" jdbcType="VARCHAR" property="email" />	<result column="QQ" jdbcType="INTEGER" property="qq" />	<result column="WECHAT" jdbcType="VARCHAR" property="wechat" />	<result column="WECHAT_ID" jdbcType="VARCHAR" property="wechatId" />	<result column="CREATOR" jdbcType="BIGINT" property="creator" />	<result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />	<result column="CORP_ID" jdbcType="BIGINT" property="corpId" />	<result column="FLAG" jdbcType="INTEGER" property="flag" />	  <result column="UNIT_NAME" jdbcType="VARCHAR" property="refUnitName" />	  <result column="CREATE_NAME" jdbcType="VARCHAR" property="refCreateName" />	  <result column="CORP_NAME" jdbcType="VARCHAR" property="refCorpName" />  </resultMap>  <sql id="Base_Column_List" >    CONTACTS_ID, UNIT_ID, CONTACTS_NAME, CONTACTS_CODE, PHONE, FIX, EMAIL, QQ, WECHAT, WECHAT_ID, CREATOR, CREATE_DATE, CORP_ID, FLAG  </sql>    <sql id="Query_Column_List" >    contacts.CONTACTS_ID, contacts.UNIT_ID, contacts.CONTACTS_NAME, contacts.CONTACTS_CODE,contacts.PHONE, contacts.FIX, contacts.EMAIL,    contacts.QQ, contacts.WECHAT, contacts.WECHAT_ID, contacts.CREATOR, contacts.CREATE_DATE, contacts.CORP_ID,    contacts.FLAG,unit.UNIT_NAME,us.USER_NAME AS CREATE_NAME,corp.CORP_NAME  </sql>     <sql id="Example_Where_Clause">    where contacts.del = 0    <trim  suffixOverrides="," >      <if test="contactsId != null and contactsId != ''" >        and contacts.CONTACTS_ID = #{contactsId}      </if>      <if test="refUnitName != null and refUnitName != ''" >        and unit.UNIT_NAME LIKE  CONCAT('%',#{refUnitName},'%')      </if>		<if test="unitId != null and unitId != ''" >			and contacts.UNIT_ID = #{unitId}		</if>      <if test="contactsName != null and contactsName != ''" >        and contacts.CONTACTS_NAME LIKE  CONCAT('%',#{contactsName},'%')      </if>		<if test="contactsCode != null and contactsCode != ''" >			and contacts.CONTACTS_CODE LIKE  CONCAT('%',#{contactsCode},'%')		</if>      <if test="phone != null and phone != ''" >        and contacts.PHONE = #{phone}      </if>      <if test="fix != null and fix != ''" >        and contacts.FIX = #{fix}      </if>      <if test="email != null and email != ''" >        and contacts.EMAIL = #{email}      </if>      <if test="qq != null and qq != ''" >        and contacts.QQ = #{qq}      </if>      <if test="wechat != null and wechat != ''" >        and contacts.WECHAT = #{wechat}      </if>      <if test="wechatId != null and wechatId != ''" >        and contacts.WECHAT_ID = #{wechatId}      </if>      <if test="creator != null and creator != ''" >        and contacts.CREATOR = #{creator}      </if>      <if test="createDate != null and createDate != ''" >        and contacts.CREATE_DATE = #{createDate}      </if>      <if test="corpId != null and corpId != ''" >        and contacts.CORP_ID = #{corpId}      </if>      <if test="flag != null and flag != ''" >        and contacts.FLAG = #{flag}      </if>		<if test="searchContent != null and searchContent != ''" >			and ( corp.CORP_NAME LIKE  CONCAT('%',#{searchContent},'%')			or contacts.CONTACTS_NAME LIKE  CONCAT('%',#{searchContent},'%')			or contacts.CONTACTS_CODE LIKE  CONCAT('%',#{searchContent},'%')			)		</if>		<if test="startTime != null and startTime != ''">			<![CDATA[ and brand.CREATE_DATE  >=  #{startTime}  ]]>		</if>		<if test="endTime != null and endTime != ''">			<![CDATA[ and brand.CREATE_DATE  <=  #{endTime}  ]]>		</if>    </trim>  </sql>     <select id="selectByPrimaryKey"  resultMap="BaseResultMap" parameterType="java.lang.Long">    select      <include refid="Query_Column_List"/>    from bd_contacts contacts      left join bd_unit unit on  contacts.UNIT_ID=unit.UNIT_ID      left join bd_user us on contacts.CREATOR=us.USER_ID      left join sys_corp corp on contacts.CORP_ID=corp.CORP_ID    where contacts.del=0 and contacts.CONTACTS_ID = #{contactsId,jdbcType=BIGINT}  </select>  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">    delete  from bd_contacts where CONTACTS_ID = #{contactsId}  </delete>    <delete id="deleteList"  parameterType="java.lang.reflect.Array" >        DELETE   FROM   BD_CONTACTS        <if test="null!=array || 0!=array.length">            where	CONTACTS_ID in            <foreach item="contactsId" collection="array" open="(" separator="," close=")">                #{contactsId}            </foreach>        </if>    </delete>  <insert id="insert" parameterType="com.tilchina.timp.model.Contacts" keyProperty="contactsId" useGeneratedKeys="true">    insert into bd_contacts	(UNIT_ID, CONTACTS_NAME, CONTACTS_CODE, PHONE, FIX, EMAIL, QQ, WECHAT, WECHAT_ID, CREATOR, CREATE_DATE, CORP_ID, FLAG)	values	(#{unitId,jdbcType=BIGINT}, #{contactsName,jdbcType=VARCHAR}, #{contactsCode,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{fix,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},	#{qq,jdbcType=INTEGER}, #{wechat,jdbcType=VARCHAR}, #{wechatId,jdbcType=VARCHAR}, #{creator,jdbcType=BIGINT}, 	#{createDate,jdbcType=TIMESTAMP}, #{corpId,jdbcType=BIGINT}, #{flag,jdbcType=INTEGER})  </insert>  <insert id="insertSelective" parameterType="com.tilchina.timp.model.Contacts" keyProperty="contactsId" useGeneratedKeys="true">    insert into bd_contacts	<trim prefix="(" suffix=")" suffixOverrides=",">	  <if test="unitId != null">	    UNIT_ID, 	  </if>	  <if test="contactsName != null">	    CONTACTS_NAME, 	  </if>		<if test="contactsCode != null">			CONTACTS_CODE,		</if>	  <if test="phone != null">	    PHONE, 	  </if>	  <if test="fix != null">	    FIX, 	  </if>	  <if test="email != null">	    EMAIL, 	  </if>	  <if test="qq != null">	    QQ, 	  </if>	  <if test="wechat != null">	    WECHAT, 	  </if>	  <if test="wechatId != null">	    WECHAT_ID, 	  </if>	  <if test="creator != null">	    CREATOR, 	  </if>	  <if test="createDate != null">	    CREATE_DATE, 	  </if>	  <if test="corpId != null">	    CORP_ID, 	  </if>	  <if test="flag != null">	    FLAG, 	  </if>	</trim>	<trim prefix="values (" suffix=")" suffixOverrides=",">	  <if test="unitId != null">	    #{unitId,jdbcType=BIGINT}, 	  </if>	  <if test="contactsName != null">	    #{contactsName,jdbcType=VARCHAR}, 	  </if>		<if test="contactsCode != null">			#{contactsCode,jdbcType=VARCHAR},		</if>	  <if test="phone != null">	    #{phone,jdbcType=VARCHAR}, 	  </if>	  <if test="fix != null">	    #{fix,jdbcType=VARCHAR}, 	  </if>	  <if test="email != null">	    #{email,jdbcType=VARCHAR}, 	  </if>	  <if test="qq != null">	    #{qq,jdbcType=INTEGER}, 	  </if>	  <if test="wechat != null">	    #{wechat,jdbcType=VARCHAR}, 	  </if>	  <if test="wechatId != null">	    #{wechatId,jdbcType=VARCHAR}, 	  </if>	  <if test="creator != null">	    #{creator,jdbcType=BIGINT}, 	  </if>	  <if test="createDate != null">	    #{createDate,jdbcType=TIMESTAMP}, 	  </if>	  <if test="corpId != null">	    #{corpId,jdbcType=BIGINT}, 	  </if>	  <if test="flag != null">	    #{flag,jdbcType=INTEGER}, 	  </if>	</trim>  </insert>  <update id="updateByPrimaryKeySelective" parameterType="com.tilchina.timp.model.Contacts" >	update bd_contacts	<set>	  <if test="unitId != null">	    UNIT_ID = #{unitId,jdbcType=BIGINT}, 	  </if>	  <if test="contactsName != null">	    CONTACTS_NAME = #{contactsName,jdbcType=VARCHAR}, 	  </if>		<if test="contactsCode != null">			CONTACTS_CODE = #{contactsCode,jdbcType=VARCHAR},		</if>	  <if test="phone != null">	    PHONE = #{phone,jdbcType=VARCHAR}, 	  </if>	  <if test="fix != null">	    FIX = #{fix,jdbcType=VARCHAR}, 	  </if>	  <if test="email != null">	    EMAIL = #{email,jdbcType=VARCHAR}, 	  </if>	  <if test="qq != null">	    QQ = #{qq,jdbcType=INTEGER}, 	  </if>	  <if test="wechat != null">	    WECHAT = #{wechat,jdbcType=VARCHAR}, 	  </if>	  <if test="wechatId != null">	    WECHAT_ID = #{wechatId,jdbcType=VARCHAR}, 	  </if>	  <if test="creator != null">	    CREATOR = #{creator,jdbcType=BIGINT}, 	  </if>	  <if test="createDate != null">	    CREATE_DATE = #{createDate,jdbcType=TIMESTAMP}, 	  </if>	  <if test="corpId != null">	    CORP_ID = #{corpId,jdbcType=BIGINT}, 	  </if>	  <if test="flag != null">	    FLAG = #{flag,jdbcType=INTEGER}, 	  </if>	</set>	where CONTACTS_ID = #{contactsId,jdbcType=BIGINT}  </update>  <update id="updateByPrimaryKey" parameterType="com.tilchina.timp.model.Contacts" >    update bd_contacts set 	  UNIT_ID = #{unitId,jdbcType=BIGINT}, CONTACTS_NAME = #{contactsName,jdbcType=VARCHAR},	  CONTACTS_CODE = #{contactsCode,jdbcType=VARCHAR}, PHONE = #{phone,jdbcType=VARCHAR},	  FIX = #{fix,jdbcType=VARCHAR}, EMAIL = #{email,jdbcType=VARCHAR}, QQ = #{qq,jdbcType=INTEGER},	  WECHAT = #{wechat,jdbcType=VARCHAR},WECHAT_ID = #{wechatId,jdbcType=VARCHAR},	  CREATOR = #{creator,jdbcType=BIGINT}, CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},	  CORP_ID = #{corpId,jdbcType=BIGINT}, FLAG = #{flag,jdbcType=INTEGER}	where CONTACTS_ID = #{contactsId,jdbcType=BIGINT}  </update>  	  <select id="selectList" resultMap="BaseResultMap"  parameterType="Object">      select        <include refid="Query_Column_List"/>      from bd_contacts contacts          left join bd_unit unit on  contacts.UNIT_ID=unit.UNIT_ID          left join bd_user us on contacts.CREATOR=us.USER_ID          left join sys_corp corp on contacts.CORP_ID=corp.CORP_ID	<include refid="Example_Where_Clause"/>       order by contacts.CREATE_DATE desc  </select>  <update id="sequestration" parameterType="java.lang.Long">    update  bd_contacts set flag=1 where CONTACTS_ID = #{contactsId}  </update>  <update id="unsequestration" parameterType="java.lang.Long">    update  bd_contacts set flag=0 where CONTACTS_ID = #{contactsId}  </update>    <select id="queryByName"  resultMap="BaseResultMap" parameterType="java.lang.String">        select        <include refid="Query_Column_List"/>        FROM bd_contacts contacts            left join bd_unit unit on  contacts.UNIT_ID=unit.UNIT_ID            left join bd_user us on contacts.CREATOR=us.USER_ID            left join sys_corp corp on contacts.CORP_ID=corp.CORP_ID        where contacts.CONTACTS_NAME = #{contactsName,jdbcType=VARCHAR}    </select>    <select id="getReferenceList" resultType="java.util.Map"  parameterType="Object">        select        contacts.CONTACTS_ID AS contactsId,contacts.CONTACTS_NAME  AS contactsName,contacts.PHONE  AS phone,contacts.EMAIL AS email,unit.ADDRESS AS address,contacts.FIX AS fix,contacts.UNIT_ID AS unitId,unit.UNIT_NAME AS unitName        from bd_contacts contacts            left join bd_unit unit on  contacts.UNIT_ID=unit.UNIT_ID            left join bd_user us on contacts.CREATOR=us.USER_ID            left join sys_corp corp on contacts.CORP_ID=corp.CORP_ID        <include refid="Example_Where_Clause"/>        order by contacts.CREATE_DATE desc    </select>    <select id="queryByUnitId"  resultMap="BaseResultMap" parameterType="java.lang.Long">        select        <include refid="Query_Column_List"/>        FROM bd_contacts contacts            left join bd_unit unit on  contacts.UNIT_ID=unit.UNIT_ID            left join bd_user us on contacts.CREATOR=us.USER_ID            left join sys_corp corp on contacts.CORP_ID=corp.CORP_ID        where contacts.UNIT_ID = #{unitId,jdbcType=BIGINT}    </select>	<select id="queryByUnitIds"  resultMap="BaseResultMap" parameterType="java.lang.Long">		select		 CONTACTS_ID, UNIT_ID, CONTACTS_NAME,PHONE		FROM bd_contacts		where del = 0		<if test="null!=unitIds || 0!=unitIds.length">			AND	UNIT_ID in			<foreach item="unitId" collection="unitIds" open="(" separator="," close=")">				#{unitId}			</foreach>		</if>	</select>	<select id="getByUnitPhone"  resultMap="BaseResultMap" parameterType="Object">		select		<include refid="Query_Column_List"/>		from bd_contacts contacts		left join bd_unit unit on  contacts.UNIT_ID=unit.UNIT_ID		left join bd_user us on contacts.CREATOR=us.USER_ID		left join sys_corp corp on contacts.CORP_ID=corp.CORP_ID		where contacts.del=0		and contacts.UNIT_ID = #{0}		and contacts.PHONE = #{1}	</select></mapper>   