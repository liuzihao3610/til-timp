<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tilchina.timp.mapper.OilPriceMapper" >
  <resultMap id="BaseResultMap" type="com.tilchina.timp.model.OilPrice" >
    <id column="OIL_PRICE_ID" jdbcType="BIGINT" property="oilPriceId" />
	<result column="OIL_PRICE_ID" jdbcType="BIGINT" property="oilPriceId" />
	<result column="OIL_NAME" jdbcType="VARCHAR" property="oilName" />
	<result column="OIL_TYPE" jdbcType="INTEGER" property="oilType" />
	<result column="LABELING" jdbcType="VARCHAR" property="labeling" />
	<result column="PRICE" jdbcType="DECIMAL" property="price" />
	  <result column="EFFECTIVE_DATE" jdbcType="DATE" property="effectiveDate" />
	<result column="CORP_ID" jdbcType="BIGINT" property="corpId" />
	<result column="FLAG" jdbcType="INTEGER" property="flag" />
	
	<result column="CORP_NAME" jdbcType="VARCHAR" property="refCorpName" />
  </resultMap>

  <sql id="Base_Column_List" >
    OIL_PRICE_ID, OIL_NAME, OIL_TYPE, LABELING, PRICE,EFFECTIVE_DATE, CORP_ID, FLAG
  </sql>
  
  <sql id="Query_Column_List">
  	oilprice.OIL_PRICE_ID, oilprice.OIL_NAME, oilprice.OIL_TYPE, oilprice.LABELING, oilprice.PRICE, oilprice.EFFECTIVE_DATE,oilprice.CORP_ID,corp.CORP_NAME, oilprice.FLAG
  </sql>
   
  <sql id="Example_Where_Clause">
    where oilprice.del = 0
    <trim  suffixOverrides="," >
      <if test="oilPriceId != null and oilPriceId != ''" >
        and oilprice.OIL_PRICE_ID = #{oilPriceId}
      </if>
      <if test="oilName != null and oilName != ''" >
        and oilprice.OIL_NAME LIKE CONCAT("%",#{oilName},"%")
      </if>
      <if test="oilType != null and oilType != ''" >
        and oilprice.OIL_TYPE = #{oilType}
      </if>
      <if test="labeling != null and labeling != ''" >
        and oilprice.LABELING = #{labeling}
      </if>
      <if test="price != null and price != ''" >
        and oilprice.PRICE = #{price}
      </if>
		<if test="effectiveDate != null and effectiveDate != ''" >
			and oilprice.EFFECTIVE_DATE = #{effectiveDate}
		</if>
      <if test="corpId != null and corpId != ''" >
        and oilprice.CORP_ID = #{corpId}
      </if>
      <if test="flag != null and flag != ''" >
        and oilprice.FLAG = #{flag}
      </if>
      <if test="searchContent != null and searchContent != ''" >
        and (oilprice.OIL_NAME LIKE  CONCAT('%',#{searchContent},'%')
        	or oilprice.OIL_TYPE LIKE  CONCAT('%',#{searchContent},'%')
        	)
      </if>
    </trim>
  </sql>
   
  <select id="selectByPrimaryKey"  resultMap="BaseResultMap" parameterType="java.lang.Long">
    select
      <include refid="Query_Column_List"/>
    FROM bd_oil_price oilprice
	JOIN sys_corp corp ON oilprice.CORP_ID=corp.CORP_ID
    where oilprice.OIL_PRICE_ID = #{oilPriceId,jdbcType=BIGINT}
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
    update BD_OIL_PRICE set DEL=1 where OIL_PRICE_ID = #{oilPriceId}
  </update>
  <update id="deleteList"  parameterType="java.lang.reflect.Array" >
  	  	update BD_OIL_PRICE	
  		<if test="null!=array || 0!=array.length">
  		 set DEL=1 where	OIL_PRICE_ID in
  	 		<foreach item="oilPriceId" collection="array" open="(" separator="," close=")">
  	 			#{oilPriceId}
  	 		</foreach>
  		</if>
  </update>
  <insert id="insert" parameterType="com.tilchina.timp.model.OilPrice" keyProperty="oilPriceId" useGeneratedKeys="true">
    insert into BD_OIL_PRICE
	(OIL_NAME, OIL_TYPE, LABELING, PRICE,EFFECTIVE_DATE, CORP_ID, FLAG)
	values
	(#{oilName,jdbcType=VARCHAR}, #{oilType,jdbcType=INTEGER}, #{labeling,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL},
	 #{effectiveDate}, #{corpId,jdbcType=BIGINT}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tilchina.timp.model.OilPrice" keyProperty="oilPriceId" useGeneratedKeys="true">
    insert into BD_OIL_PRICE
	<trim prefix="(" suffix=")" suffixOverrides=",">
	  <if test="oilName != null">
	    OIL_NAME, 
	  </if>
	  <if test="oilType != null">
	    OIL_TYPE, 
	  </if>
	  <if test="labeling != null">
	    LABELING, 
	  </if>
	  <if test="price != null">
	    PRICE, 
	  </if>
		<if test="effectiveDate != null">
			EFFECTIVE_DATE,
		</if>
	  <if test="corpId != null">
	    CORP_ID, 
	  </if>
	  <if test="flag != null">
	    FLAG, 
	  </if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides=",">
	  <if test="oilName != null">
	    #{oilName,jdbcType=VARCHAR}, 
	  </if>
	  <if test="oilType != null">
	    #{oilType,jdbcType=INTEGER}, 
	  </if>
	  <if test="labeling != null">
	    #{labeling,jdbcType=VARCHAR}, 
	  </if>
	  <if test="price != null">
	    #{price,jdbcType=DECIMAL}, 
	  </if>
		<if test="effectiveDate != null">
			#{effectiveDate,jdbcType=DECIMAL},
		</if>
	  <if test="corpId != null">
	    #{corpId,jdbcType=BIGINT}, 
	  </if>
	  <if test="flag != null">
	    #{flag,jdbcType=INTEGER}, 
	  </if>
	</trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tilchina.timp.model.OilPrice" >
	update BD_OIL_PRICE
	<set>
	  <if test="oilName != null">
	    OIL_NAME = #{oilName,jdbcType=VARCHAR}, 
	  </if>
	  <if test="oilType != null">
	    OIL_TYPE = #{oilType,jdbcType=INTEGER}, 
	  </if>
	  <if test="labeling != null">
	    LABELING = #{labeling,jdbcType=VARCHAR}, 
	  </if>
	  <if test="price != null">
	    PRICE = #{price,jdbcType=DECIMAL}, 
	  </if>
		<if test="effectiveDate != null">
			EFFECTIVE_DATE = #{effectiveDate,jdbcType=DECIMAL},
		</if>
	  <if test="corpId != null">
	    CORP_ID = #{corpId,jdbcType=BIGINT}, 
	  </if>
	  <if test="flag != null">
	    FLAG = #{flag,jdbcType=INTEGER}, 
	  </if>
	</set>
	where OIL_PRICE_ID = #{oilPriceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tilchina.timp.model.OilPrice" >
    update BD_OIL_PRICE set 
	  OIL_NAME = #{oilName,jdbcType=VARCHAR}, OIL_TYPE = #{oilType,jdbcType=INTEGER}, LABELING = #{labeling,jdbcType=VARCHAR}, 
	  PRICE = #{price,jdbcType=DECIMAL},EFFECTIVE_DATE = #{effectiveDate,jdbcType=DATE},
	  CORP_ID = #{corpId,jdbcType=BIGINT}, FLAG = #{flag,jdbcType=INTEGER}
	where OIL_PRICE_ID = #{oilPriceId,jdbcType=BIGINT}
  </update>
  	
  <select id="selectList" resultMap="BaseResultMap"  parameterType="Object">
	select
	<include refid="Query_Column_List"/>
	FROM bd_oil_price oilprice
	JOIN sys_corp corp ON oilprice.CORP_ID=corp.CORP_ID
	<include refid="Example_Where_Clause"/>
	order by oilprice.OIL_PRICE_ID DESC
  </select>
  
  <select id="getReferenceList"  resultType="java.util.Map">
  	SELECT oilprice.OIL_PRICE_ID AS oilPriceId,oilprice.OIL_NAME AS oilPriceName,
  	oilprice.OIL_TYPE AS oilType,oilprice.LABELING AS labeling,oilprice.PRICE AS price
  	FROM bd_oil_price oilprice
	JOIN sys_corp corp ON oilprice.CORP_ID=corp.CORP_ID
	<include refid="Example_Where_Clause"/>
	<if test="orderByClause != null and orderByClause != ''" >
       order by ${orderByClause}
    </if>
  </select>
  	
</mapper>   
