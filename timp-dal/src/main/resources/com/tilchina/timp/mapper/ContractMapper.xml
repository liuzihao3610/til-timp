<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.tilchina.timp.mapper.ContractMapper">	<resultMap id="BaseResultMap" type="com.tilchina.timp.model.Contract">		<id column="CONTRACT_ID" jdbcType="BIGINT" property="contractId" />		<result column="CONTRACT_ID" jdbcType="BIGINT" property="contractId" />		<result column="CONTRACT_NUMBER" jdbcType="VARCHAR" property="contractNumber" />		<result column="CONTRACT_TYPE" jdbcType="INTEGER" property="contractType" />		<result column="PARTYA" jdbcType="BIGINT" property="partya" />		<result column="PARTYB" jdbcType="BIGINT" property="partyb" />		<result column="PARTYA_MANAGER" jdbcType="BIGINT" property="partyaManager" />		<result column="PARTYB_MANAGER" jdbcType="BIGINT" property="partybManager" />		<result column="SIGNING_DATE" jdbcType="TIMESTAMP" property="signingDate" />		<result column="SIGNING_PLACE" jdbcType="BIGINT" property="signingPlace" />		<result column="CONTRACT_START_DATE" jdbcType="TIMESTAMP" property="contractStartDate" />		<result column="CONTRACT_END_DATE" jdbcType="TIMESTAMP" property="contractEndDate" />		<result column="CONTRACT_ATTACHMENT" jdbcType="VARCHAR" property="contractAttachment" />		<result column="BILL_STATUS" jdbcType="INTEGER" property="billStatus" />		<result column="CREATOR" jdbcType="BIGINT" property="creator" />		<result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />		<result column="CHECKER" jdbcType="BIGINT" property="checker" />		<result column="CHECK_DATE" jdbcType="TIMESTAMP" property="checkDate" />		<result column="CORP_ID" jdbcType="BIGINT" property="corpId" />		<result column="FLAG" jdbcType="INTEGER" property="flag" />		<result column="refPartya" jdbcType="VARCHAR" property="refPartya" />		<result column="refPartyb" jdbcType="VARCHAR" property="refPartyb" />		<result column="refCreator" jdbcType="VARCHAR" property="refCreator" />		<result column="refChecker" jdbcType="VARCHAR" property="refChecker" />		<result column="refPartyaManager" jdbcType="VARCHAR" property="refPartyaManager" />		<result column="refPartybManager" jdbcType="VARCHAR" property="refPartybManager" />		<result column="refSigningPlace" jdbcType="VARCHAR" property="refSigningPlace" />	</resultMap>	<sql id="Base_Column_List">		self.CONTRACT_ID,		self.CONTRACT_NUMBER,		self.CONTRACT_TYPE,		self.PARTYA,		self.PARTYB,		self.PARTYA_MANAGER,		self.PARTYB_MANAGER,		self.SIGNING_DATE,		self.SIGNING_PLACE,		self.CONTRACT_START_DATE,		self.CONTRACT_END_DATE,		self.CONTRACT_ATTACHMENT,		self.BILL_STATUS,		self.CREATOR,		self.CREATE_DATE,		self.CHECKER,		self.CHECK_DATE,		self.CORP_ID,		self.FLAG,		corpA.CORP_NAME as refPartya,		corpB.CORP_NAME as refPartyb,		userA.USER_NAME as refPartyaManager,		userB.USER_NAME as refPartybManager,		userC.USER_NAME as refCreator,		userD.USER_NAME as refChecker,		city.CITY_NAME as refSigningPlace	</sql>	<sql id="Example_Where_Clause">		where self.DEL = 0		<trim suffixOverrides=",">			<if test="contractId != null and contractId != ''">				and self.CONTRACT_ID = #{contractId}			</if>			<if test="contractNumber != null and contractNumber != ''">				and self.CONTRACT_NUMBER LIKE CONCAT('%', #{contractNumber}, '%')			</if>			<if test="contractType != null and contractType != ''">				and self.CONTRACT_TYPE = #{contractType}			</if>			<if test="partya != null and partya != ''">				and self.PARTYA = #{partya}			</if>			<if test="partyb != null and partyb != ''">				and self.PARTYB = #{partyb}			</if>			<if test="partyaManager != null and partyaManager != ''">				and self.PARTYA_MANAGER = #{partyaManager}			</if>			<if test="partybManager != null and partybManager != ''">				and self.PARTYB_MANAGER = #{partybManager}			</if>			<if test="signingDate != null and signingDate != ''">				and self.SIGNING_DATE = #{signingDate}			</if>			<if test="signingPlace != null and signingPlace != ''">				and self.SIGNING_PLACE = #{signingPlace}			</if>			<if test="contractStartDate != null and contractStartDate != ''">				and self.CONTRACT_START_DATE = #{contractStartDate}			</if>			<if test="contractEndDate != null and contractEndDate != ''">				and self.CONTRACT_END_DATE = #{contractEndDate}			</if>			<if test="contractAttachment != null and contractAttachment != ''">				and self.CONTRACT_ATTACHMENT = #{contractAttachment}			</if>			<if test="billStatus != null and billStatus != ''">				and self.BILL_STATUS = #{billStatus}			</if>			<if test="creator != null and creator != ''">				and self.CREATOR = #{creator}			</if>			<if test="createDate != null and createDate != ''">				and self.CREATE_DATE = #{createDate}			</if>			<if test="checker != null and checker != ''">				and self.CHECKER = #{checker}			</if>			<if test="checkDate != null and checkDate != ''">				and self.CHECK_DATE = #{checkDate}			</if>			<if test="corpId != null and corpId != ''">				and self.CORP_ID = #{corpId}			</if>			<if test="flag != null and flag != ''">				and self.FLAG = #{flag}			</if>			<if test="refPartya != null and refPartya != ''">				and refPartya LIKE CONCAT('%', #{refPartya}, '%')			</if>			<if test="refPartyb != null and refPartyb != ''">				and refPartyb LIKE CONCAT('%', #{refPartyb}, '%')			</if>			<if test="refCreator != null and refCreator != ''">				and refCreator LIKE CONCAT('%', #{refCreator}, '%')			</if>			<if test="refPartyaManager != null and refPartyaManager != ''">				and refPartyaManager LIKE CONCAT('%', #{refPartyaManager}, '%')			</if>			<if test="refPartybManager != null and refPartybManager != ''">				and refPartybManager LIKE CONCAT('%', #{refPartybManager}, '%')			</if>			<if test="refSigningPlace != null and refSigningPlace != ''">				and refPartybManager LIKE CONCAT('%', #{refPartybManager}, '%')			</if>			<if test="party != null and party !=''">				and (PARTYA = #{party} or PARTYB = #{party})			</if>			<if test="searchContent != null and searchContent != ''">				and				(					self.CONTRACT_NUMBER like CONCAT('%', #{searchContent}, '%') or					corpA.CORP_NAME  like CONCAT('%', #{searchContent}, '%') or					corpB.CORP_NAME  like CONCAT('%', #{searchContent}, '%')				)			</if>			<if test="startTime != null and startTime != ''">				<![CDATA[ and SIGNING_DATE >= #{startTime} ]]>			</if>			<if test="endTime != null and endTime != ''">				<![CDATA[ and SIGNING_DATE <= #{endTime} ]]>			</if>		</trim>	</sql>	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">		select		<include refid="Base_Column_List" />		from fs_contract self		left join sys_corp corpA on self.PARTYA = corpA.CORP_ID		left join sys_corp corpB on self.PARTYB = corpB.CORP_ID		left join bd_user userA on self.PARTYA_MANAGER = userA.USER_ID		left join bd_user userB on self.PARTYB_MANAGER = userB.USER_ID		left join bd_user userC on self.CREATOR = userC.USER_ID		left join bd_user userD on self.CHECKER = userD.USER_ID		left join bd_city city on self.SIGNING_PLACE = city.CITY_ID		where self.CONTRACT_ID = #{contractId,jdbcType=BIGINT}		and self.DEL = 0	</select>	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">		update fs_contract		set DEL = 1		where CONTRACT_ID = #{contractId}	</delete>	<insert id="insert" parameterType="com.tilchina.timp.model.Contract" keyProperty="contractId" useGeneratedKeys="true">insert into fs_contract	(CONTRACT_NUMBER, CONTRACT_TYPE, PARTYA, PARTYB, PARTYA_MANAGER, PARTYB_MANAGER, SIGNING_DATE, SIGNING_PLACE, CONTRACT_START_DATE,	CONTRACT_END_DATE, CONTRACT_ATTACHMENT, BILL_STATUS, CREATOR, CREATE_DATE, CHECKER, CHECK_DATE, CORP_ID,	FLAG)	values	(#{contractNumber,jdbcType=VARCHAR}, #{contractType,jdbcType=INTEGER}, #{partya,jdbcType=BIGINT}, #{partyb,jdbcType=BIGINT},	#{partyaManager,jdbcType=BIGINT}, #{partybManager,jdbcType=BIGINT}, #{signingDate,jdbcType=TIMESTAMP}, #{signingPlace,jdbcType=BIGINT},	#{contractStartDate,jdbcType=TIMESTAMP}, #{contractEndDate,jdbcType=TIMESTAMP}, #{contractAttachment,jdbcType=VARCHAR},	#{billStatus,jdbcType=INTEGER}, #{creator,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP},	#{checker,jdbcType=BIGINT}, #{checkDate,jdbcType=TIMESTAMP}, #{corpId,jdbcType=BIGINT}, #{flag,jdbcType=INTEGER})</insert>	<insert id="insertSelective" parameterType="com.tilchina.timp.model.Contract" keyProperty="contractId" useGeneratedKeys="true">		insert into fs_contract		<trim prefix="(" suffix=")" suffixOverrides=",">			<if test="contractNumber != null">CONTRACT_NUMBER,</if>			<if test="contractType != null">CONTRACT_TYPE,</if>			<if test="partya != null">PARTYA,</if>			<if test="partyb != null">PARTYB,</if>			<if test="partyaManager != null">PARTYA_MANAGER,</if>			<if test="partybManager != null">PARTYB_MANAGER,</if>			<if test="signingDate != null">SIGNING_DATE,</if>			<if test="signingPlace != null">SIGNING_PLACE,</if>			<if test="contractStartDate != null">CONTRACT_START_DATE,</if>			<if test="contractEndDate != null">CONTRACT_END_DATE,</if>			<if test="contractAttachment != null">CONTRACT_ATTACHMENT,</if>			<if test="billStatus != null">BILL_STATUS,</if>			<if test="creator != null">CREATOR,</if>			<if test="createDate != null">CREATE_DATE,</if>			<if test="checker != null">CHECKER,</if>			<if test="checkDate != null">CHECK_DATE,</if>			<if test="corpId != null">CORP_ID,</if>			<if test="flag != null">FLAG,</if>		</trim>		<trim prefix="values (" suffix=")" suffixOverrides=",">			<if test="contractNumber != null">#{contractNumber,jdbcType=VARCHAR},</if>			<if test="contractType != null">#{contractType,jdbcType=INTEGER},</if>			<if test="partya != null">#{partya,jdbcType=BIGINT},</if>			<if test="partyb != null">#{partyb,jdbcType=BIGINT},</if>			<if test="partyaManager != null">#{partyaManager,jdbcType=BIGINT},</if>			<if test="partybManager != null">#{partybManager,jdbcType=BIGINT},</if>			<if test="signingDate != null">#{signingDate,jdbcType=TIMESTAMP},</if>			<if test="signingPlace != null">#{signingPlace,jdbcType=BIGINT},</if>			<if test="contractStartDate != null">#{contractStartDate,jdbcType=TIMESTAMP},</if>			<if test="contractEndDate != null">#{contractEndDate,jdbcType=TIMESTAMP},</if>			<if test="contractAttachment != null">#{contractAttachment,jdbcType=VARCHAR},</if>			<if test="billStatus != null">#{billStatus,jdbcType=INTEGER},</if>			<if test="creator != null">#{creator,jdbcType=BIGINT},</if>			<if test="createDate != null">#{createDate,jdbcType=TIMESTAMP},</if>			<if test="checker != null">#{checker,jdbcType=BIGINT},</if>			<if test="checkDate != null">#{checkDate,jdbcType=TIMESTAMP},</if>			<if test="corpId != null">#{corpId,jdbcType=BIGINT},</if>			<if test="flag != null">#{flag,jdbcType=INTEGER},</if>		</trim>	</insert>	<update id="updateByPrimaryKeySelective" parameterType="com.tilchina.timp.model.Contract">		update fs_contract		<set>			<if test="contractNumber != null">CONTRACT_NUMBER = #{contractNumber,jdbcType=VARCHAR},</if>			<if test="contractType != null">CONTRACT_TYPE = #{contractType,jdbcType=INTEGER},</if>			<if test="partya != null">PARTYA = #{partya,jdbcType=BIGINT},</if>			<if test="partyb != null">PARTYB = #{partyb,jdbcType=BIGINT},</if>			<if test="partyaManager != null">PARTYA_MANAGER = #{partyaManager,jdbcType=BIGINT},</if>			<if test="partybManager != null">PARTYB_MANAGER = #{partybManager,jdbcType=BIGINT},</if>			<if test="signingDate != null">SIGNING_DATE = #{signingDate,jdbcType=TIMESTAMP},</if>			<if test="signingPlace != null">SIGNING_PLACE = #{signingPlace,jdbcType=BIGINT},</if>			<if test="contractStartDate != null">CONTRACT_START_DATE = #{contractStartDate,jdbcType=TIMESTAMP},</if>			<if test="contractEndDate != null">CONTRACT_END_DATE = #{contractEndDate,jdbcType=TIMESTAMP},</if>			<if test="contractAttachment != null">CONTRACT_ATTACHMENT = #{contractAttachment,jdbcType=VARCHAR},</if>			<if test="flag != null">FLAG = #{flag,jdbcType=INTEGER},</if>		</set>		where CONTRACT_ID = #{contractId,jdbcType=BIGINT}	</update>	<update id="updateByPrimaryKey" parameterType="com.tilchina.timp.model.Contract">update fs_contract set	  CONTRACT_NUMBER = #{contractNumber,jdbcType=VARCHAR}, CONTRACT_TYPE = #{contractType,jdbcType=INTEGER}, PARTYA = #{partya,jdbcType=BIGINT},	  PARTYB = #{partyb,jdbcType=BIGINT}, PARTYA_MANAGER = #{partyaManager,jdbcType=BIGINT}, PARTYB_MANAGER = #{partybManager,jdbcType=BIGINT},	  SIGNING_DATE = #{signingDate,jdbcType=TIMESTAMP}, SIGNING_PLACE = #{signingPlace,jdbcType=BIGINT},	  CONTRACT_START_DATE = #{contractStartDate,jdbcType=TIMESTAMP}, CONTRACT_END_DATE = #{contractEndDate,jdbcType=TIMESTAMP},	  CONTRACT_ATTACHMENT = #{contractAttachment,jdbcType=VARCHAR}, BILL_STATUS = #{billStatus,jdbcType=INTEGER},	  CREATOR = #{creator,jdbcType=BIGINT}, CREATE_DATE = #{createDate,jdbcType=TIMESTAMP}, CHECKER = #{checker,jdbcType=BIGINT},	  CHECK_DATE = #{checkDate,jdbcType=TIMESTAMP}, CORP_ID = #{corpId,jdbcType=BIGINT},	  FLAG = #{flag,jdbcType=INTEGER}	where CONTRACT_ID = #{contractId,jdbcType=BIGINT}	</update>	<select id="selectList" resultMap="BaseResultMap" parameterType="Object">		select		<include refid="Base_Column_List" />		from fs_contract self		left join sys_corp corpA on self.PARTYA = corpA.CORP_ID		left join sys_corp corpB on self.PARTYB = corpB.CORP_ID		left join bd_user userA on self.PARTYA_MANAGER = userA.USER_ID		left join bd_user userB on self.PARTYB_MANAGER = userB.USER_ID		left join bd_user userC on self.CREATOR = userC.USER_ID		left join bd_user userD on self.CHECKER = userD.USER_ID		left join bd_city city on self.SIGNING_PLACE = city.CITY_ID		<include refid="Example_Where_Clause" />		order by self.CREATE_DATE DESC	</select>	<update id="setCheckState" parameterType="com.tilchina.timp.model.Contract">		update fs_contract		set CHECKER = #{checker},			CHECK_DATE = #{checkDate},			BILL_STATUS = #{billStatus}		where CONTRACT_ID = #{contractId}	</update>	<select id="getReferenceList" resultType="java.util.Map" parameterType="java.util.Map">		select self.CONTRACT_ID as contractId,			   self.CONTRACT_NUMBER as contractNumber,			   self.PARTYA as partyA,			   self.PARTYB as partyB,			   <!--corpA.CORP_NAME 客户   corpB.CORP_NAME 承运商  -->			   corpA.CORP_NAME as refPartyACorpName,			   corpB.CORP_NAME as refPartyBCorpName		from fs_contract self		left join sys_corp corpA on self.PARTYA = corpA.CORP_ID		left join sys_corp corpB on self.PARTYB = corpB.CORP_ID		where self.BILL_STATUS = 1		and self.FLAG = 0		and self.DEL = 0		<if test="searchContent != null and searchContent != ''">			and (self.CONTRACT_NUMBER like CONCAT('%', #{searchContent}, '%')				or corpA.CORP_NAME like CONCAT('%', #{searchContent}, '%')				or corpB.CORP_NAME like CONCAT('%', #{searchContent}, '%')				)		</if>	</select></mapper>