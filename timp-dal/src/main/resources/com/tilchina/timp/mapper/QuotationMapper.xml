<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.tilchina.timp.mapper.QuotationMapper">	<resultMap id="BaseResultMap" type="com.tilchina.timp.model.Quotation">		<id column="QUOTATION_ID"          jdbcType ="BIGINT"    property ="quotationId"/>		<result column="QUOTATION_ID"      jdbcType ="BIGINT"    property ="quotationId" />		<result column="QUOTATION_NUMBER"  jdbcType ="VARCHAR"   property ="quotationNumber" />		<result column="QUOTATION_TYPE"    jdbcType ="INTEGER"   property ="quotationType" />		<result column="CONTRACT_ID"       jdbcType ="BIGINT"    property ="contractId" />		<result column="CUSTOMER_ID"       jdbcType ="BIGINT"    property ="customerId" />		<result column="VENDOR_CORP_ID"    jdbcType ="BIGINT"    property ="vendorCorpId" />		<result column="QUOTATION_NAME"    jdbcType ="VARCHAR"   property ="quotationName" />		<result column="QUOTATION_FILE"    jdbcType ="VARCHAR"   property ="quotationFile" />		<result column="JOB_TYPE"          jdbcType ="INTEGER"   property ="jobType" />		<result column="EFFECTIVE_DATE"    jdbcType ="TIMESTAMP" property ="effectiveDate" />		<result column="EXPIRATION_DATE"   jdbcType ="TIMESTAMP" property ="expirationDate" />		<result column="CREATOR"           jdbcType ="BIGINT"    property ="creator" />		<result column="CREATE_DATE"       jdbcType ="TIMESTAMP" property ="createDate" />		<result column="CHECKER"           jdbcType ="BIGINT"    property ="checker" />		<result column="CHECK_DATE"        jdbcType ="TIMESTAMP" property ="checkDate" />		<result column="BILL_STATUS"       jdbcType ="INTEGER"   property ="billStatus" />		<result column="CORP_ID"           jdbcType ="BIGINT"    property ="corpId" />		<result column="FLAG"              jdbcType ="INTEGER"   property ="flag" />		<result column="refLeadTime"       jdbcType ="INTEGER"   property ="refLeadTime"/>		<result column="refContractNumber" jdbcType ="VARCHAR"   property ="refContractNumber"/>		<result column="refCustomerName"   jdbcType ="VARCHAR"   property ="refCustomerName"/>		<result column="refVendorCorpName" jdbcType ="VARCHAR"   property ="refVendorCorpName"/>		<result column="refCreatorName"    jdbcType ="VARCHAR"   property ="refCreatorName"/>		<result column="refCheckerName"    jdbcType ="VARCHAR"   property ="refCheckerName"/>		<result column="refCorpName"       jdbcType ="VARCHAR"   property ="refCorpName"/>	</resultMap>	<sql id="Base_Column_List">		self.QUOTATION_ID,		self.QUOTATION_NUMBER,		self.QUOTATION_TYPE,		self.CONTRACT_ID,		self.CUSTOMER_ID,		self.VENDOR_CORP_ID,		self.QUOTATION_NAME,		self.QUOTATION_FILE,		self.JOB_TYPE,		self.EFFECTIVE_DATE,		self.EXPIRATION_DATE,		self.CREATOR,		self.CREATE_DATE,		self.CHECKER,		self.CHECK_DATE,		self.BILL_STATUS,		self.CORP_ID,		self.FLAG  	</sql>	<sql id="Query_Column_List">		self.QUOTATION_ID,		self.QUOTATION_NUMBER,		self.QUOTATION_TYPE,		self.CONTRACT_ID,		self.CUSTOMER_ID,		self.VENDOR_CORP_ID,		self.QUOTATION_NAME,		self.QUOTATION_FILE,		self.JOB_TYPE,		self.EFFECTIVE_DATE,		self.EXPIRATION_DATE,		self.CREATOR,		self.CREATE_DATE,		self.CHECKER,		self.CHECK_DATE,		self.BILL_STATUS,		self.CORP_ID,		self.FLAG,		contract.CONTRACT_NUMBER as refContractNumber,		corpA.CORP_NAME          as refCustomerName,		corpB.CORP_NAME          as refVendorCorpName,		corpC.CORP_NAME          as refCorpName,		userA.USER_NAME          as refCreatorName,		userB.USER_NAME          as refCheckerName  	</sql>	<sql id="Example_Where_Clause">		where self.DEL = 0		<trim suffixOverrides=",">			<if test="quotationId != null and quotationId != ''">				and self.QUOTATION_ID = #{quotationId}			</if>			<if test="quotationNumber != null and quotationNumber != ''">				and (self.QUOTATION_NUMBER = #{quotationNumber} or self.QUOTATION_NUMBER LIKE CONCAT('%', #{quotationNumber}, '%'))			</if>			<if test="quotationType != null and quotationType != ''">				and self.QUOTATION_TYPE = #{quotationType}			</if>			<if test="contractId != null and contractId != ''">				and self.CONTRACT_ID = #{contractId}			</if>			<if test="customerId != null and customerId != ''">				and self.CUSTOMER_ID = #{customerId}			</if>			<if test="vendorCorpId != null and vendorCorpId != ''">				and self.VENDOR_CORP_ID = #{vendorCorpId}			</if>			<if test="quotationName != null and quotationName != ''">				and (self.QUOTATION_NAME = #{quotationName} or self.QUOTATION_NAME LIKE CONCAT('%', #{quotationName}, '%'))			</if>			<if test="quotationFile != null and quotationFile != ''">				and (self.QUOTATION_FILE = #{quotationFile} or self.QUOTATION_FILE LIKE CONCAT('%', #{quotationFile}, '%'))			</if>			<if test="jobType != null and jobType != ''" >				and self.JOB_TYPE = #{jobType}			</if>			<if test="effectiveDate != null and effectiveDate != ''">				and self.EFFECTIVE_DATE = #{effectiveDate}			</if>			<if test="expirationDate != null and expirationDate != ''" >				and self.EXPIRATION_DATE = #{expirationDate}			</if>			<if test="creator != null and creator != ''">				and self.CREATOR = #{creator}			</if>			<if test="createDate != null and createDate != ''">				and self.CREATE_DATE = #{createDate}			</if>			<if test="checker != null and checker != ''">				and self.CHECKER = #{checker}			</if>			<if test="checkDate != null and checkDate != ''">				and self.CHECK_DATE = #{checkDate}			</if>			<if test="corpId != null and corpId != ''">				and self.CORP_ID = #{corpId}			</if>			<if test="flag != null and flag != ''">				and self.FLAG = #{flag}			</if>			<if test="searchContent != null and searchContent != ''">				and				(				self.QUOTATION_NUMBER like CONCAT('%', #{searchContent}, '%') or				contract.CONTRACT_NUMBER like CONCAT('%', #{searchContent}, '%') or				corpA.CORP_NAME like CONCAT('%', #{searchContent}, '%')				)			</if>			<if test="refContractNumber != null and refContractNumber != ''">				and (contract.CONTRACT_NUMBER = #{refContractNumber} or contract.CONTRACT_NUMBER LIKE CONCAT('%', #{refContractNumber}, '%'))			</if>			<if test="refCustomerName != null and refCustomerName != ''">				and (corpA.CORP_NAME = #{refCustomerName} or corpA.CORP_NAME LIKE CONCAT('%', #{refCustomerName}, '%'))			</if>			<if test="refVendorCorpName != null and refVendorCorpName != ''">				and (corpB.CORP_NAME = #{refVendorCorpName} or corpB.CORP_NAME LIKE CONCAT('%', #{refVendorCorpName}, '%'))			</if>			<if test="startTime != null and startTime != ''">				<![CDATA[ and self.EFFECTIVE_DATE >= #{startTime} ]]>			</if>			<if test="endTime != null and endTime != ''">				<![CDATA[ and self.EFFECTIVE_DATE <= #{endTime} ]]>			</if>		</trim>	</sql>	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">		select		<include refid="Query_Column_List"/>		from fs_quotation self		left join fs_contract contract on self.CONTRACT_ID = contract.CONTRACT_ID		left join sys_corp corpA on self.CUSTOMER_ID = corpA.CORP_ID		left join sys_corp corpB on self.VENDOR_CORP_ID = corpB.CORP_ID		left join sys_corp corpC on self.CORP_ID = corpC.CORP_ID		left join bd_user userA on self.CREATOR = userA.USER_ID		left join bd_user userB on self.CHECKER = userB.USER_ID		where self.QUOTATION_ID = #{quotationId,jdbcType=BIGINT}		and self.DEL = 0	</select>	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">	    update fs_quotation set DEL = 1 where QUOTATION_ID = #{quotationId}  	</delete>	<insert id="insert" parameterType="com.tilchina.timp.model.Quotation" keyProperty="quotationId" useGeneratedKeys="true">    insert into fs_quotation	(QUOTATION_NUMBER, QUOTATION_TYPE, CONTRACT_ID, CUSTOMER_ID, VENDOR_CORP_ID, QUOTATION_NAME, QUOTATION_FILE, JOB_TYPE,	EFFECTIVE_DATE, EXPIRATION_DATE, CREATOR, CREATE_DATE, CHECKER, CHECK_DATE, BILL_STATUS, CORP_ID, FLAG)	values	(#{quotationNumber,jdbcType=VARCHAR}, #{quotationType,jdbcType=INTEGER}, #{contractId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT},	#{vendorCorpId,jdbcType=BIGINT}, #{quotationName,jdbcType=VARCHAR}, #{quotationFile,jdbcType=VARCHAR},	#{jobType,jdbcType=INTEGER}, #{effectiveDate,jdbcType=TIMESTAMP}, #{expirationDate,jdbcType=TIMESTAMP}, #{creator,jdbcType=BIGINT},	#{createDate,jdbcType=TIMESTAMP}, #{checker,jdbcType=BIGINT}, #{checkDate,jdbcType=TIMESTAMP},	#{billStatus,jdbcType=INTEGER}, #{corpId,jdbcType=BIGINT}, #{flag,jdbcType=INTEGER})  	</insert>	<insert id="insertSelective" parameterType="com.tilchina.timp.model.Quotation" keyProperty="quotationId" useGeneratedKeys="true">		insert into fs_quotation		<trim prefix="(" suffix=")" suffixOverrides=",">			<if test="quotationNumber != null">				QUOTATION_NUMBER,			</if>			<if test="quotationType != null">				QUOTATION_TYPE,			</if>			<if test="contractId != null">				CONTRACT_ID,			</if>			<if test="customerId != null">				CUSTOMER_ID,			</if>			<if test="vendorCorpId != null">				VENDOR_CORP_ID,			</if>			<if test="quotationName != null">				QUOTATION_NAME,			</if>			<if test="quotationFile != null">				QUOTATION_FILE,			</if>			<if test="jobType != null">				JOB_TYPE,			</if>			<if test="effectiveDate != null">				EFFECTIVE_DATE,			</if>			<if test="expirationDate != null">				EXPIRATION_DATE,			</if>			<if test="creator != null">				CREATOR,			</if>			<if test="createDate != null">				CREATE_DATE,			</if>			<if test="checker != null">				CHECKER,			</if>			<if test="checkDate != null">				CHECK_DATE,			</if>			<if test="billStatus != null">				BILL_STATUS,			</if>			<if test="corpId != null">				CORP_ID,			</if>			<if test="flag != null">				FLAG,			</if>		</trim>		<trim prefix="values (" suffix=")" suffixOverrides=",">			<if test="quotationNumber != null">				#{quotationNumber,jdbcType=VARCHAR},			</if>			<if test="quotationType != null">				#{quotationType,jdbcType=INTEGER},			</if>			<if test="contractId != null">				#{contractId,jdbcType=BIGINT},			</if>			<if test="customerId != null">				#{customerId,jdbcType=BIGINT},			</if>			<if test="vendorCorpId != null">				#{vendorCorpId,jdbcType=BIGINT},			</if>			<if test="quotationName != null">				#{quotationName,jdbcType=VARCHAR},			</if>			<if test="quotationFile != null">				#{quotationFile,jdbcType=VARCHAR},			</if>			<if test="jobType != null">				#{jobType,jdbcType=INTEGER},			</if>			<if test="effectiveDate != null">				#{effectiveDate,jdbcType=TIMESTAMP},			</if>			<if test="expirationDate != null">				#{expirationDate,jdbcType=TIMESTAMP},			</if>			<if test="creator != null">				#{creator,jdbcType=BIGINT},			</if>			<if test="createDate != null">				#{createDate,jdbcType=TIMESTAMP},			</if>			<if test="checker != null">				#{checker,jdbcType=BIGINT},			</if>			<if test="checkDate != null">				#{checkDate,jdbcType=TIMESTAMP},			</if>			<if test="billStatus != null">				#{billStatus,jdbcType=INTEGER},			</if>			<if test="corpId != null">				#{corpId,jdbcType=BIGINT},			</if>			<if test="flag != null">				#{flag,jdbcType=INTEGER},			</if>		</trim>	</insert>	<update id="updateByPrimaryKey" parameterType="com.tilchina.timp.model.Quotation" >    update fs_quotation set	  QUOTATION_NUMBER = #{quotationNumber,jdbcType=VARCHAR}, QUOTATION_TYPE = #{quotationType,jdbcType=INTEGER}, CONTRACT_ID = #{contractId,jdbcType=BIGINT},	  CUSTOMER_ID = #{customerId,jdbcType=BIGINT}, VENDOR_CORP_ID = #{vendorCorpId,jdbcType=BIGINT},	  QUOTATION_NAME = #{quotationName,jdbcType=VARCHAR}, QUOTATION_FILE = #{quotationFile,jdbcType=VARCHAR},	  JOB_TYPE = #{jobType,jdbcType=INTEGER}, EFFECTIVE_DATE = #{effectiveDate,jdbcType=TIMESTAMP}, EXPIRATION_DATE = #{expirationDate,jdbcType=TIMESTAMP},	  CREATOR = #{creator,jdbcType=BIGINT}, CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},	  CHECKER = #{checker,jdbcType=BIGINT}, CHECK_DATE = #{checkDate,jdbcType=TIMESTAMP}, BILL_STATUS = #{billStatus,jdbcType=INTEGER},	  CORP_ID = #{corpId,jdbcType=BIGINT}, FLAG = #{flag,jdbcType=INTEGER}	where QUOTATION_ID = #{quotationId,jdbcType=BIGINT}  	</update>	<update id="updateByPrimaryKeySelective" parameterType="com.tilchina.timp.model.Quotation" >		update fs_quotation		<set>			<if test="quotationNumber != null">				QUOTATION_NUMBER = #{quotationNumber,jdbcType=VARCHAR},			</if>			<if test="quotationType != null">				QUOTATION_TYPE = #{quotationType,jdbcType=INTEGER},			</if>			<if test="contractId != null">				CONTRACT_ID = #{contractId,jdbcType=BIGINT},			</if>			<if test="customerId != null">				CUSTOMER_ID = #{customerId,jdbcType=BIGINT},			</if>			<if test="vendorCorpId != null">				VENDOR_CORP_ID = #{vendorCorpId,jdbcType=BIGINT},			</if>			<if test="quotationName != null">				QUOTATION_NAME = #{quotationName,jdbcType=VARCHAR},			</if>			<if test="quotationFile != null">				QUOTATION_FILE = #{quotationFile,jdbcType=VARCHAR},			</if>			<if test="jobType != null">				JOB_TYPE = #{jobType,jdbcType=INTEGER},			</if>			<if test="effectiveDate != null">				EFFECTIVE_DATE = #{effectiveDate,jdbcType=TIMESTAMP},			</if>			<if test="expirationDate != null">				EXPIRATION_DATE = #{expirationDate,jdbcType=TIMESTAMP},			</if>			<if test="creator != null">				CREATOR = #{creator,jdbcType=BIGINT},			</if>			<if test="createDate != null">				CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},			</if>			<if test="checker != null">				CHECKER = #{checker,jdbcType=BIGINT},			</if>			<if test="checkDate != null">				CHECK_DATE = #{checkDate,jdbcType=TIMESTAMP},			</if>			<if test="billStatus != null">				BILL_STATUS = #{billStatus,jdbcType=INTEGER},			</if>			<if test="corpId != null">				CORP_ID = #{corpId,jdbcType=BIGINT},			</if>			<if test="flag != null">				FLAG = #{flag,jdbcType=INTEGER},			</if>		</set>		where QUOTATION_ID = #{quotationId,jdbcType=BIGINT}	</update>	<select id="selectList" resultMap="BaseResultMap" parameterType="Object">		select		<include refid="Query_Column_List"/>		from fs_quotation self		left join fs_contract contract on self.CONTRACT_ID = contract.CONTRACT_ID		left join sys_corp corpA on self.CUSTOMER_ID = corpA.CORP_ID		left join sys_corp corpB on self.VENDOR_CORP_ID = corpB.CORP_ID		left join sys_corp corpC on self.CORP_ID = corpC.CORP_ID		left join bd_user userA on self.CREATOR = userA.USER_ID		left join bd_user userB on self.CHECKER = userB.USER_ID		<include refid="Example_Where_Clause"/>			order by self.CREATE_DATE DESC	</select>	<sql id="SelectByQuotationVo_Column_List">		self.QUOTATION_ID,		self.QUOTATION_NUMBER,		self.QUOTATION_TYPE,		self.CONTRACT_ID,		self.CUSTOMER_ID,		self.VENDOR_CORP_ID,		self.QUOTATION_NAME,		self.QUOTATION_FILE,		self.EFFECTIVE_DATE,		self.CREATOR,		self.CREATE_DATE,		self.CHECKER,		self.CHECK_DATE,		self.CORP_ID,		self.FLAG,		detail.QUOTATION_DETAIL_ID,		detail.QUOTATION_ID,		detail.QUOTATION_PLAN,		detail.SEND_CITY_ID,		detail.RECV_CITY_ID,		detail.JOB_TYPE,		detail.DISTANCE,		detail.CAR_BRAND_ID,		detail.CAR_TYPE_ID,		detail.CAR_MODEL_ID,		detail.LEAD_TIME as refLeadTime,		detail.UNIT_PRICE,		detail.TOTAL_PRICE,		detail.TAX_RATE,		detail.PRICE_DESC,		detail.CORP_ID,		detail.FLAG  	</sql>	<resultMap id="SelectByQuotationVoResultMap" type="com.tilchina.timp.model.Quotation">		<id column="QUOTATION_ID" jdbcType="BIGINT" property="quotationId"/>		<result column="refLeadTime" jdbcType="INTEGER" property="refLeadTime"/>	</resultMap>	<select id="selectByQuotationVO" parameterType="com.tilchina.timp.vo.QuotationVO" resultMap="SelectByQuotationVoResultMap">		select <include refid="SelectByQuotationVo_Column_List"/>		from fs_quotation self		left join fs_quotation_detail detail on self.QUOTATION_ID = detail.QUOTATION_ID		where self.DEL = 0		and self.FLAG = 0		<if test="customerId != null and customerId != 0">		and self.CUSTOMER_ID = #{customerId}		</if>		<if test="vendorCorpId != null and vendorCorpId != 0">		and self.VENDOR_CORP_ID = #{vendorCorpId}		</if>		<if test="sendCityId != null and sendCityId != 0">		and detail.SEND_CITY_ID = #{sendCityId}		</if>		<if test="recvCityId != null and recvCityId != 0">		and detail.RECV_CITY_ID = #{recvCityId}		</if>		<if test="carBrandId != null and carBrandId != 0">		and detail.CAR_BRAND_ID = #{carBrandId}		</if>		<if test="carTypeId != null and carTypeId != 0">		and detail.CAR_TYPE_ID = #{carTypeId}		</if>		<if test="carModelId != null and carModelId != 0">		and detail.CAR_MODEL_ID = #{carModelId}		</if>		<if test="jobType != null and jobType != 0">		and detail.JOB_TYPE = #{jobType}		</if>		<if test="orderDate != null and orderDate != 0">		<![CDATA[ and self.EFFECTIVE_DATE <= #{orderDate} ]]>		</if>		order by self.EFFECTIVE_DATE DESC limit 1	</select>	<select id="updateCheckStateByPrimaryKey" parameterType="com.tilchina.timp.model.Quotation">		update fs_quotation self		set self.CHECKER = #{checker},			self.CHECK_DATE = #{checkDate},			self.BILL_STATUS = #{billStatus}		where self.QUOTATION_ID = #{quotationId}	</select>	<update id="updateFlagStateByPrimaryKey" parameterType="java.lang.Long">		update fs_quotation self		set self.FLAG = 1		where self.QUOTATION_ID = #{quotationId}	</update></mapper>   